type UserData {
  _id: String!
  podcasts: [Podcast]
  playingEpisode: Episode
  newReleases: [Episode]
  inProgress: [Episode]
  upnext: [Episode]
  favorites: [Episode]
  played: [Episode]
}

extend type Query {
  podcasts: [Podcast]
  playingEpisode: Episode
  newReleases: [Episode]
  upnext: [Episode]
  inProgress: [Episode]
  favorites: [Episode]
  played: [Episode]
}

type EpisodeIds {
  podcastId: Int!
  id: String!
}

type Mutation {
  subscribe(podcastId: Int!): String
  unsubscribe(podcastId: Int!): String

  setPlayingEpisode(podcastId: Int!, id: String!): Episode
  clearPlayingEpisode: EpisodeIds

  addToUpnext(podcastId: Int!, id: String!): Episode
  removeFromUpnext(podcastId: Int!, id: String!): Episode

  addToFavorites(podcastId: Int!, id: String!): Episode
  removeFromFavorites(podcastId: Int!, id: String!): Episode

  markAsPlayed(podcastId: Int!, id: String!): Episode
  markAsUnplayed(podcastId: Int!, id: String!): Episode

  updatePlayedSeconds(
    id: String!
    podcastId: Int!
    playedSeconds: Float!
  ): Float
}
